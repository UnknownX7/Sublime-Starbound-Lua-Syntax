{
	"scope": "source.lua.starbound - keyword.control.lua - constant.language.lua, source.lua.starbound string",

	"completions":
	[
		"in", "else", "return", "false", "true", "break", "or", "and",
		"_VERSION", "_ENV", "self", "storage", "_SBLOADED", "math.huge", "math.pi", "math.maxinteger", "math.mininteger", "utf8.charpattern",

		{ "trigger": "assert", "contents" : "assert(${1})" },
		{ "trigger": "error", "contents" : "error(${1})" },
		{ "trigger": "getmetatable", "contents" : "getmetatable(${1})" },
		{ "trigger": "ipairs", "contents" : "ipairs(${1})" },
		{ "trigger": "jarray", "contents" : "jarray(${1})" },
		{ "trigger": "jobject", "contents" : "jobject(${1})" },
		{ "trigger": "jremove", "contents" : "jremove(${1})" },
		{ "trigger": "jresize", "contents" : "jresize(${1})" },
		{ "trigger": "jsize", "contents" : "jsize(${1})" },
		{ "trigger": "next", "contents" : "next(${1})" },
		{ "trigger": "pairs", "contents" : "pairs(${1})" },
		{ "trigger": "pcall", "contents" : "pcall(${1})" },
		{ "trigger": "print", "contents" : "print(${1})" },
		{ "trigger": "rawequal", "contents" : "rawequal(${1})" },
		{ "trigger": "rawget", "contents" : "rawget(${1})" },
		{ "trigger": "rawlen", "contents" : "rawlen(${1})" },
		{ "trigger": "rawset", "contents" : "rawset(${1})" },
		{ "trigger": "require", "contents" : "require(${1})" },
		{ "trigger": "select", "contents" : "select(${1})" },
		{ "trigger": "setmetatable", "contents" : "setmetatable(${1})" },
		{ "trigger": "tonumber", "contents" : "tonumber(${1})" },
		{ "trigger": "tostring", "contents" : "tostring(${1})" },
		{ "trigger": "type", "contents" : "type(${1})" },
		{ "trigger": "xpcall", "contents" : "xpcall(${1})" },

		{ "trigger": "coroutine.isyieldable", "contents" : "coroutine.isyieldable(${1})" },
		{ "trigger": "coroutine.resume", "contents" : "coroutine.resume(${1})" },
		{ "trigger": "coroutine.running", "contents" : "coroutine.running(${1})" },
		{ "trigger": "coroutine.status", "contents" : "coroutine.status(${1})" },
		{ "trigger": "coroutine.yield", "contents" : "coroutine.yield(${1})" },

		{ "trigger": "math.abs", "contents" : "math.abs(${1})" },
		{ "trigger": "math.acos", "contents" : "math.acos(${1})" },
		{ "trigger": "math.asin", "contents" : "math.asin(${1})" },
		{ "trigger": "math.atan", "contents" : "math.atan(${1})" },
		{ "trigger": "math.ceil", "contents" : "math.ceil(${1})" },
		{ "trigger": "math.cos", "contents" : "math.cos(${1})" },
		{ "trigger": "math.deg", "contents" : "math.deg(${1})" },
		{ "trigger": "math.exp", "contents" : "math.exp(${1})" },
		{ "trigger": "math.floor", "contents" : "math.floor(${1})" },
		{ "trigger": "math.fmod", "contents" : "math.fmod(${1})" },
		{ "trigger": "math.log", "contents" : "math.log(${1})" },
		{ "trigger": "math.max", "contents" : "math.max(${1})" },
		{ "trigger": "math.min", "contents" : "math.min(${1})" },
		{ "trigger": "math.modf", "contents" : "math.modf(${1})" },
		{ "trigger": "math.rad", "contents" : "math.rad(${1})" },
		{ "trigger": "math.random", "contents" : "math.random(${1})" },
		{ "trigger": "math.randomseed", "contents" : "math.randomseed(${1})" },
		{ "trigger": "math.sin", "contents" : "math.sin(${1})" },
		{ "trigger": "math.sqrt", "contents" : "math.sqrt(${1})" },
		{ "trigger": "math.tan", "contents" : "math.tan(${1})" },
		{ "trigger": "math.tointeger", "contents" : "math.tointeger(${1})" },
		{ "trigger": "math.type", "contents" : "math.type(${1})" },
		{ "trigger": "math.ult", "contents" : "math.ult(${1})" },

		{ "trigger": "os.clock", "contents" : "os.clock(${1})" },
		{ "trigger": "os.difftime", "contents" : "os.difftime(${1})" },
		{ "trigger": "os.time", "contents" : "os.time(${1})" },

		{ "trigger": "string.byte", "contents" : "string.byte(${1})" },
		{ "trigger": "string.char", "contents" : "string.char(${1})" },
		{ "trigger": "string.dump", "contents" : "string.dump(${1})" },
		{ "trigger": "string.find", "contents" : "string.find(${1})" },
		{ "trigger": "string.format", "contents" : "string.format(${1})" },
		{ "trigger": "string.gmatch", "contents" : "string.gmatch(${1})" },
		{ "trigger": "string.gsub", "contents" : "string.gsub(${1})" },
		{ "trigger": "string.len", "contents" : "string.len(${1})" },
		{ "trigger": "string.lower", "contents" : "string.lower(${1})" },
		{ "trigger": "string.match", "contents" : "string.match(${1})" },
		{ "trigger": "string.pack", "contents" : "string.pack(${1})" },
		{ "trigger": "string.packsize", "contents" : "string.packsize(${1})" },
		{ "trigger": "string.rep", "contents" : "string.rep(${1})" },
		{ "trigger": "string.reverse", "contents" : "string.reverse(${1})" },
		{ "trigger": "string.sub", "contents" : "string.sub(${1})" },
		{ "trigger": "string.unpack", "contents" : "string.unpack(${1})" },
		{ "trigger": "string.upper", "contents" : "string.upper(${1})" },

		{ "trigger": "table.concat", "contents" : "table.concat(${1})" },
		{ "trigger": "table.insert", "contents" : "table.insert(${1})" },
		{ "trigger": "table.move", "contents" : "table.move(${1})" },
		{ "trigger": "table.pack", "contents" : "table.pack(${1})" },
		{ "trigger": "table.remove", "contents" : "table.remove(${1})" },
		{ "trigger": "table.sort", "contents" : "table.sort(${1})" },
		{ "trigger": "table.unpack", "contents" : "table.unpack(${1})" },

		{ "trigger": "utf8.char", "contents" : "utf8.char(${1})" },
		{ "trigger": "utf8.codepoint", "contents" : "utf8.codepoint(${1})" },
		{ "trigger": "utf8.codes", "contents" : "utf8.codes(${1})" },
		{ "trigger": "utf8.len", "contents" : "utf8.len(${1})" },
		{ "trigger": "utf8.offset", "contents" : "utf8.offset(${1})" },

		{ "trigger": "CommandProcessor.adminCheck", "contents" : "CommandProcessor.adminCheck(${1})" },

		{ "trigger": "activeItem.aimAngleAndDirection", "contents" : "activeItem.aimAngleAndDirection(${1})" },
		{ "trigger": "activeItem.callOtherHandScript", "contents" : "activeItem.callOtherHandScript(${1})" },
		{ "trigger": "activeItem.fireMode", "contents" : "activeItem.fireMode(${1})" },
		{ "trigger": "activeItem.giveOwnerItem", "contents" : "activeItem.giveOwnerItem(${1})" },
		{ "trigger": "activeItem.hand", "contents" : "activeItem.hand(${1})" },
		{ "trigger": "activeItem.handPosition", "contents" : "activeItem.handPosition(${1})" },
		{ "trigger": "activeItem.ownerAimPosition", "contents" : "activeItem.ownerAimPosition(${1})" },
		{ "trigger": "activeItem.ownerEntityId", "contents" : "activeItem.ownerEntityId(${1})" },
		{ "trigger": "activeItem.ownerHasItem", "contents" : "activeItem.ownerHasItem(${1})" },
		{ "trigger": "activeItem.ownerPowerMultiplier", "contents" : "activeItem.ownerPowerMultiplier(${1})" },
		{ "trigger": "activeItem.setArmAngle", "contents" : "activeItem.setArmAngle(${1})" },
		{ "trigger": "activeItem.setCursor", "contents" : "activeItem.setCursor(${1})" },
		{ "trigger": "activeItem.setDamageSources", "contents" : "activeItem.setDamageSources(${1})" },
		{ "trigger": "activeItem.setFacingDirection", "contents" : "activeItem.setFacingDirection(${1})" },
		{ "trigger": "activeItem.setForceRegions", "contents" : "activeItem.setForceRegions(${1})" },
		{ "trigger": "activeItem.setHoldingItem", "contents" : "activeItem.setHoldingItem(${1})" },
		{ "trigger": "activeItem.setInstanceValue", "contents" : "activeItem.setInstanceValue(${1})" },
		{ "trigger": "activeItem.setInventoryIcon", "contents" : "activeItem.setInventoryIcon(${1})" },
		{ "trigger": "activeItem.setItemDamageSources", "contents" : "activeItem.setItemDamageSources(${1})" },
		{ "trigger": "activeItem.setItemForceRegions", "contents" : "activeItem.setItemForceRegions(${1})" },
		{ "trigger": "activeItem.setItemShieldPolys", "contents" : "activeItem.setItemShieldPolys(${1})" },
		{ "trigger": "activeItem.setOutsideOfHand", "contents" : "activeItem.setOutsideOfHand(${1})" },
		{ "trigger": "activeItem.setRecoil", "contents" : "activeItem.setRecoil(${1})" },
		{ "trigger": "activeItem.setScriptedAnimationParameter", "contents" : "activeItem.setScriptedAnimationParameter(${1})" },
		{ "trigger": "activeItem.setShieldPolys", "contents" : "activeItem.setShieldPolys(${1})" },
		{ "trigger": "activeItem.setTwoHandedGrip", "contents" : "activeItem.setTwoHandedGrip(${1})" },
		{ "trigger": "activeItem.takeOwnerItem", "contents" : "activeItem.takeOwnerItem(${1})" },
		{ "trigger": "activeItem.aimAngle", "contents" : "activeItem.aimAngle(${1})" },
		{ "trigger": "activeItem.emote", "contents" : "activeItem.emote(${1})" },
		{ "trigger": "activeItem.interact", "contents" : "activeItem.interact(${1})" },
		{ "trigger": "activeItem.ownerDamageTeam", "contents" : "activeItem.ownerDamageTeam(${1})" },
		{ "trigger": "activeItem.setBackArmFrame", "contents" : "activeItem.setBackArmFrame(${1})" },
		{ "trigger": "activeItem.setCameraFocusEntity", "contents" : "activeItem.setCameraFocusEntity(${1})" },
		{ "trigger": "activeItem.setFrontArmFrame", "contents" : "activeItem.setFrontArmFrame(${1})" },

		{ "trigger": "activeItemAnimation.animationParameter", "contents" : "activeItemAnimation.animationParameter(${1})" },
		{ "trigger": "activeItemAnimation.handPosition", "contents" : "activeItemAnimation.handPosition(${1})" },
		{ "trigger": "activeItemAnimation.ownerAimPosition", "contents" : "activeItemAnimation.ownerAimPosition(${1})" },
		{ "trigger": "activeItemAnimation.ownerArmAngle", "contents" : "activeItemAnimation.ownerArmAngle(${1})" },
		{ "trigger": "activeItemAnimation.ownerFacingDirection", "contents" : "activeItemAnimation.ownerFacingDirection(${1})" },
		{ "trigger": "activeItemAnimation.ownerPosition", "contents" : "activeItemAnimation.ownerPosition(${1})" },
		{ "trigger": "activeItemAnimation.partPoint", "contents" : "activeItemAnimation.partPoint(${1})" },

		{ "trigger": "animator.animationState", "contents" : "animator.animationState(${1})" },
		{ "trigger": "animator.animationStateProperty", "contents" : "animator.animationStateProperty(${1})" },
		{ "trigger": "animator.burstParticleEmitter", "contents" : "animator.burstParticleEmitter(${1})" },
		{ "trigger": "animator.currentRotationAngle", "contents" : "animator.currentRotationAngle(${1})" },
		{ "trigger": "animator.hasSound", "contents" : "animator.hasSound(${1})" },
		{ "trigger": "animator.hasTransformationGroup", "contents" : "animator.hasTransformationGroup(${1})" },
		{ "trigger": "animator.partPoly", "contents" : "animator.partPoly(${1})" },
		{ "trigger": "animator.playSound", "contents" : "animator.playSound(${1})" },
		{ "trigger": "animator.resetTransformationGroup", "contents" : "animator.resetTransformationGroup(${1})" },
		{ "trigger": "animator.rotateGroup", "contents" : "animator.rotateGroup(${1})" },
		{ "trigger": "animator.rotateTransformationGroup", "contents" : "animator.rotateTransformationGroup(${1})" },
		{ "trigger": "animator.scaleTransformationGroup", "contents" : "animator.scaleTransformationGroup(${1})" },
		{ "trigger": "animator.setAnimationRate", "contents" : "animator.setAnimationRate(${1})" },
		{ "trigger": "animator.setAnimationState", "contents" : "animator.setAnimationState(${1})" },
		{ "trigger": "animator.setEffectActive", "contents" : "animator.setEffectActive(${1})" },
		{ "trigger": "animator.setGlobalTag", "contents" : "animator.setGlobalTag(${1})" },
		{ "trigger": "animator.setLightActive", "contents" : "animator.setLightActive(${1})" },
		{ "trigger": "animator.setLightPointAngle", "contents" : "animator.setLightPointAngle(${1})" },
		{ "trigger": "animator.setLightPosition", "contents" : "animator.setLightPosition(${1})" },
		{ "trigger": "animator.setPartTag", "contents" : "animator.setPartTag(${1})" },
		{ "trigger": "animator.setParticleEmitterActive", "contents" : "animator.setParticleEmitterActive(${1})" },
		{ "trigger": "animator.setParticleEmitterBurstCount", "contents" : "animator.setParticleEmitterBurstCount(${1})" },
		{ "trigger": "animator.setParticleEmitterEmissionRate", "contents" : "animator.setParticleEmitterEmissionRate(${1})" },
		{ "trigger": "animator.setParticleEmitterOffsetRegion", "contents" : "animator.setParticleEmitterOffsetRegion(${1})" },
		{ "trigger": "animator.setSoundPitch", "contents" : "animator.setSoundPitch(${1})" },
		{ "trigger": "animator.setSoundPool", "contents" : "animator.setSoundPool(${1})" },
		{ "trigger": "animator.setSoundPosition", "contents" : "animator.setSoundPosition(${1})" },
		{ "trigger": "animator.setSoundVolume", "contents" : "animator.setSoundVolume(${1})" },
		{ "trigger": "animator.stopAllSounds", "contents" : "animator.stopAllSounds(${1})" },
		{ "trigger": "animator.transformTransformationGroup", "contents" : "animator.transformTransformationGroup(${1})" },
		{ "trigger": "animator.translateTransformationGroup", "contents" : "animator.translateTransformationGroup(${1})" },
		{ "trigger": "animator.setLightColor", "contents" : "animator.setLightColor(${1})" },

		{ "trigger": "config.getParameter", "contents" : "config.getParameter(${1})" },

		{ "trigger": "effect.addStatModifierGroup", "contents" : "effect.addStatModifierGroup(${1})" },
		{ "trigger": "effect.duration", "contents" : "effect.duration(${1})" },
		{ "trigger": "effect.expire", "contents" : "effect.expire(${1})" },
		{ "trigger": "effect.modifyDuration", "contents" : "effect.modifyDuration(${1})" },
		{ "trigger": "effect.removeStatModifierGroup", "contents" : "effect.removeStatModifierGroup(${1})" },
		{ "trigger": "effect.setParentDirectives", "contents" : "effect.setParentDirectives(${1})" },
		{ "trigger": "effect.setStatModifierGroup", "contents" : "effect.setStatModifierGroup(${1})" },
		{ "trigger": "effect.sourceEntity", "contents" : "effect.sourceEntity(${1})" },
		{ "trigger": "effect.getParameter", "contents" : "effect.getParameter(${1})" },

		{ "trigger": "entity.damageTeam", "contents" : "entity.damageTeam(${1})" },
		{ "trigger": "entity.distanceToEntity", "contents" : "entity.distanceToEntity(${1})" },
		{ "trigger": "entity.entityInSight", "contents" : "entity.entityInSight(${1})" },
		{ "trigger": "entity.id", "contents" : "entity.id(${1})" },
		{ "trigger": "entity.isValidTarget", "contents" : "entity.isValidTarget(${1})" },
		{ "trigger": "entity.position", "contents" : "entity.position(${1})" },
		{ "trigger": "entity.uniqueId", "contents" : "entity.uniqueId(${1})" },
		{ "trigger": "entity.entityType", "contents" : "entity.entityType(${1})" },

		{ "trigger": "item.category", "contents" : "item.category(${1})" },
		{ "trigger": "item.consume", "contents" : "item.consume(${1})" },
		{ "trigger": "item.count", "contents" : "item.count(${1})" },
		{ "trigger": "item.description", "contents" : "item.description(${1})" },
		{ "trigger": "item.descriptor", "contents" : "item.descriptor(${1})" },
		{ "trigger": "item.dropDrawables", "contents" : "item.dropDrawables(${1})" },
		{ "trigger": "item.empty", "contents" : "item.empty(${1})" },
		{ "trigger": "item.friendlyName", "contents" : "item.friendlyName(${1})" },
		{ "trigger": "item.fuelAmount", "contents" : "item.fuelAmount(${1})" },
		{ "trigger": "item.hasItemTag", "contents" : "item.hasItemTag(${1})" },
		{ "trigger": "item.iconDrawables", "contents" : "item.iconDrawables(${1})" },
		{ "trigger": "item.is", "contents" : "item.is(${1})" },
		{ "trigger": "item.largeImage", "contents" : "item.largeImage(${1})" },
		{ "trigger": "item.learnBlueprintsOnPickup", "contents" : "item.learnBlueprintsOnPickup(${1})" },
		{ "trigger": "item.matches", "contents" : "item.matches(${1})" },
		{ "trigger": "item.matchingDescriptors", "contents" : "item.matchingDescriptors(${1})" },
		{ "trigger": "item.maxStack", "contents" : "item.maxStack(${1})" },
		{ "trigger": "item.name", "contents" : "item.name(${1})" },
		{ "trigger": "item.pickupQuestTemplates", "contents" : "item.pickupQuestTemplates(${1})" },
		{ "trigger": "item.pickupSound", "contents" : "item.pickupSound(${1})" },
		{ "trigger": "item.price", "contents" : "item.price(${1})" },
		{ "trigger": "item.rarity", "contents" : "item.rarity(${1})" },
		{ "trigger": "item.rarityString", "contents" : "item.rarityString(${1})" },
		{ "trigger": "item.setCount", "contents" : "item.setCount(${1})" },
		{ "trigger": "item.timeToLive", "contents" : "item.timeToLive(${1})" },
		{ "trigger": "item.tooltipKind", "contents" : "item.tooltipKind(${1})" },
		{ "trigger": "item.twoHanded", "contents" : "item.twoHanded(${1})" },

		{ "trigger": "mcontroller.accelerate", "contents" : "mcontroller.accelerate(${1})" },
		{ "trigger": "mcontroller.addMomentum", "contents" : "mcontroller.addMomentum(${1})" },
		{ "trigger": "mcontroller.anchorState", "contents" : "mcontroller.anchorState(${1})" },
		{ "trigger": "mcontroller.applyParameters", "contents" : "mcontroller.applyParameters(${1})" },
		{ "trigger": "mcontroller.approachVelocity", "contents" : "mcontroller.approachVelocity(${1})" },
		{ "trigger": "mcontroller.approachVelocityAlongAngle", "contents" : "mcontroller.approachVelocityAlongAngle(${1})" },
		{ "trigger": "mcontroller.approachXVelocity", "contents" : "mcontroller.approachXVelocity(${1})" },
		{ "trigger": "mcontroller.approachYVelocity", "contents" : "mcontroller.approachYVelocity(${1})" },
		{ "trigger": "mcontroller.autoClearControls", "contents" : "mcontroller.autoClearControls(${1})" },
		{ "trigger": "mcontroller.baseParameters", "contents" : "mcontroller.baseParameters(${1})" },
		{ "trigger": "mcontroller.boundBox", "contents" : "mcontroller.boundBox(${1})" },
		{ "trigger": "mcontroller.canJump", "contents" : "mcontroller.canJump(${1})" },
		{ "trigger": "mcontroller.clearControls", "contents" : "mcontroller.clearControls(${1})" },
		{ "trigger": "mcontroller.collisionBody", "contents" : "mcontroller.collisionBody(${1})" },
		{ "trigger": "mcontroller.collisionBoundBox", "contents" : "mcontroller.collisionBoundBox(${1})" },
		{ "trigger": "mcontroller.collisionPoly", "contents" : "mcontroller.collisionPoly(${1})" },
		{ "trigger": "mcontroller.controlAcceleration", "contents" : "mcontroller.controlAcceleration(${1})" },
		{ "trigger": "mcontroller.controlApproachVelocity", "contents" : "mcontroller.controlApproachVelocity(${1})" },
		{ "trigger": "mcontroller.controlApproachVelocityAlongAngle", "contents" : "mcontroller.controlApproachVelocityAlongAngle(${1})" },
		{ "trigger": "mcontroller.controlApproachXVelocity", "contents" : "mcontroller.controlApproachXVelocity(${1})" },
		{ "trigger": "mcontroller.controlApproachYVelocity", "contents" : "mcontroller.controlApproachYVelocity(${1})" },
		{ "trigger": "mcontroller.controlCrouch", "contents" : "mcontroller.controlCrouch(${1})" },
		{ "trigger": "mcontroller.controlDown", "contents" : "mcontroller.controlDown(${1})" },
		{ "trigger": "mcontroller.controlFace", "contents" : "mcontroller.controlFace(${1})" },
		{ "trigger": "mcontroller.controlFly", "contents" : "mcontroller.controlFly(${1})" },
		{ "trigger": "mcontroller.controlForce", "contents" : "mcontroller.controlForce(${1})" },
		{ "trigger": "mcontroller.controlHoldJump", "contents" : "mcontroller.controlHoldJump(${1})" },
		{ "trigger": "mcontroller.controlJump", "contents" : "mcontroller.controlJump(${1})" },
		{ "trigger": "mcontroller.controlModifiers", "contents" : "mcontroller.controlModifiers(${1})" },
		{ "trigger": "mcontroller.controlMove", "contents" : "mcontroller.controlMove(${1})" },
		{ "trigger": "mcontroller.controlParameters", "contents" : "mcontroller.controlParameters(${1})" },
		{ "trigger": "mcontroller.controlRotation", "contents" : "mcontroller.controlRotation(${1})" },
		{ "trigger": "mcontroller.crouching", "contents" : "mcontroller.crouching(${1})" },
		{ "trigger": "mcontroller.facingDirection", "contents" : "mcontroller.facingDirection(${1})" },
		{ "trigger": "mcontroller.falling", "contents" : "mcontroller.falling(${1})" },
		{ "trigger": "mcontroller.flying", "contents" : "mcontroller.flying(${1})" },
		{ "trigger": "mcontroller.force", "contents" : "mcontroller.force(${1})" },
		{ "trigger": "mcontroller.isColliding", "contents" : "mcontroller.isColliding(${1})" },
		{ "trigger": "mcontroller.isCollisionStuck", "contents" : "mcontroller.isCollisionStuck(${1})" },
		{ "trigger": "mcontroller.isNullColliding", "contents" : "mcontroller.isNullColliding(${1})" },
		{ "trigger": "mcontroller.liquidId", "contents" : "mcontroller.liquidId(${1})" },
		{ "trigger": "mcontroller.liquidMovement", "contents" : "mcontroller.liquidMovement(${1})" },
		{ "trigger": "mcontroller.liquidPercentage", "contents" : "mcontroller.liquidPercentage(${1})" },
		{ "trigger": "mcontroller.localBoundBox", "contents" : "mcontroller.localBoundBox(${1})" },
		{ "trigger": "mcontroller.movingDirection", "contents" : "mcontroller.movingDirection(${1})" },
		{ "trigger": "mcontroller.onGround", "contents" : "mcontroller.onGround(${1})" },
		{ "trigger": "mcontroller.parameters", "contents" : "mcontroller.parameters(${1})" },
		{ "trigger": "mcontroller.position", "contents" : "mcontroller.position(${1})" },
		{ "trigger": "mcontroller.resetAnchorState", "contents" : "mcontroller.resetAnchorState(${1})" },
		{ "trigger": "mcontroller.resetParameters", "contents" : "mcontroller.resetParameters(${1})" },
		{ "trigger": "mcontroller.rotate", "contents" : "mcontroller.rotate(${1})" },
		{ "trigger": "mcontroller.rotation", "contents" : "mcontroller.rotation(${1})" },
		{ "trigger": "mcontroller.running", "contents" : "mcontroller.running(${1})" },
		{ "trigger": "mcontroller.setAnchorState", "contents" : "mcontroller.setAnchorState(${1})" },
		{ "trigger": "mcontroller.setAutoClearControls", "contents" : "mcontroller.setAutoClearControls(${1})" },
		{ "trigger": "mcontroller.setPosition", "contents" : "mcontroller.setPosition(${1})" },
		{ "trigger": "mcontroller.setRotation", "contents" : "mcontroller.setRotation(${1})" },
		{ "trigger": "mcontroller.setVelocity", "contents" : "mcontroller.setVelocity(${1})" },
		{ "trigger": "mcontroller.setXPosition", "contents" : "mcontroller.setXPosition(${1})" },
		{ "trigger": "mcontroller.setXVelocity", "contents" : "mcontroller.setXVelocity(${1})" },
		{ "trigger": "mcontroller.setYPosition", "contents" : "mcontroller.setYPosition(${1})" },
		{ "trigger": "mcontroller.setYVelocity", "contents" : "mcontroller.setYVelocity(${1})" },
		{ "trigger": "mcontroller.translate", "contents" : "mcontroller.translate(${1})" },
		{ "trigger": "mcontroller.velocity", "contents" : "mcontroller.velocity(${1})" },
		{ "trigger": "mcontroller.walking", "contents" : "mcontroller.walking(${1})" },
		{ "trigger": "mcontroller.xPosition", "contents" : "mcontroller.xPosition(${1})" },
		{ "trigger": "mcontroller.xVelocity", "contents" : "mcontroller.xVelocity(${1})" },
		{ "trigger": "mcontroller.yPosition", "contents" : "mcontroller.yPosition(${1})" },
		{ "trigger": "mcontroller.yVelocity", "contents" : "mcontroller.yVelocity(${1})" },
		{ "trigger": "mcontroller.groundMovement", "contents" : "mcontroller.groundMovement(${1})" },
		{ "trigger": "mcontroller.stickingDirection", "contents" : "mcontroller.stickingDirection(${1})" },

		{ "trigger": "message.setHandler", "contents" : "message.setHandler(${1})" },

		{ "trigger": "monster.familyIndex", "contents" : "monster.familyIndex(${1})" },
		{ "trigger": "monster.flyTo", "contents" : "monster.flyTo(${1})" },
		{ "trigger": "monster.level", "contents" : "monster.level(${1})" },
		{ "trigger": "monster.say", "contents" : "monster.say(${1})" },
		{ "trigger": "monster.sayPortrait", "contents" : "monster.sayPortrait(${1})" },
		{ "trigger": "monster.seed", "contents" : "monster.seed(${1})" },
		{ "trigger": "monster.setAggressive", "contents" : "monster.setAggressive(${1})" },
		{ "trigger": "monster.setDamageBar", "contents" : "monster.setDamageBar(${1})" },
		{ "trigger": "monster.setDamageOnTouch", "contents" : "monster.setDamageOnTouch(${1})" },
		{ "trigger": "monster.setDamageSources", "contents" : "monster.setDamageSources(${1})" },
		{ "trigger": "monster.setDamageTeam", "contents" : "monster.setDamageTeam(${1})" },
		{ "trigger": "monster.setDeathParticleBurst", "contents" : "monster.setDeathParticleBurst(${1})" },
		{ "trigger": "monster.setDeathSound", "contents" : "monster.setDeathSound(${1})" },
		{ "trigger": "monster.setDisplayNametag", "contents" : "monster.setDisplayNametag(${1})" },
		{ "trigger": "monster.setDropPool", "contents" : "monster.setDropPool(${1})" },
		{ "trigger": "monster.setInteractive", "contents" : "monster.setInteractive(${1})" },
		{ "trigger": "monster.setName", "contents" : "monster.setName(${1})" },
		{ "trigger": "monster.setPhysicsForces", "contents" : "monster.setPhysicsForces(${1})" },
		{ "trigger": "monster.setUniqueId", "contents" : "monster.setUniqueId(${1})" },
		{ "trigger": "monster.toAbsolutePosition", "contents" : "monster.toAbsolutePosition(${1})" },
		{ "trigger": "monster.type", "contents" : "monster.type(${1})" },
		{ "trigger": "monster.uniqueParameters", "contents" : "monster.uniqueParameters(${1})" },

		{ "trigger": "npc.aimPosition", "contents" : "npc.aimPosition(${1})" },
		{ "trigger": "npc.beginAltFire", "contents" : "npc.beginAltFire(${1})" },
		{ "trigger": "npc.beginPrimaryFire", "contents" : "npc.beginPrimaryFire(${1})" },
		{ "trigger": "npc.dance", "contents" : "npc.dance(${1})" },
		{ "trigger": "npc.disableWornArmor", "contents" : "npc.disableWornArmor(${1})" },
		{ "trigger": "npc.dropPools", "contents" : "npc.dropPools(${1})" },
		{ "trigger": "npc.emote", "contents" : "npc.emote(${1})" },
		{ "trigger": "npc.endAltFire", "contents" : "npc.endAltFire(${1})" },
		{ "trigger": "npc.endPrimaryFire", "contents" : "npc.endPrimaryFire(${1})" },
		{ "trigger": "npc.energy", "contents" : "npc.energy(${1})" },
		{ "trigger": "npc.gender", "contents" : "npc.gender(${1})" },
		{ "trigger": "npc.getItemSlot", "contents" : "npc.getItemSlot(${1})" },
		{ "trigger": "npc.humanoidIdentity", "contents" : "npc.humanoidIdentity(${1})" },
		{ "trigger": "npc.isLounging", "contents" : "npc.isLounging(${1})" },
		{ "trigger": "npc.level", "contents" : "npc.level(${1})" },
		{ "trigger": "npc.maxEnergy", "contents" : "npc.maxEnergy(${1})" },
		{ "trigger": "npc.npcType", "contents" : "npc.npcType(${1})" },
		{ "trigger": "npc.resetLounging", "contents" : "npc.resetLounging(${1})" },
		{ "trigger": "npc.say", "contents" : "npc.say(${1})" },
		{ "trigger": "npc.sayPortrait", "contents" : "npc.sayPortrait(${1})" },
		{ "trigger": "npc.seed", "contents" : "npc.seed(${1})" },
		{ "trigger": "npc.setAggressive", "contents" : "npc.setAggressive(${1})" },
		{ "trigger": "npc.setAimPosition", "contents" : "npc.setAimPosition(${1})" },
		{ "trigger": "npc.setDamageOnTouch", "contents" : "npc.setDamageOnTouch(${1})" },
		{ "trigger": "npc.setDamageTeam", "contents" : "npc.setDamageTeam(${1})" },
		{ "trigger": "npc.setDeathParticleBurst", "contents" : "npc.setDeathParticleBurst(${1})" },
		{ "trigger": "npc.setDisplayNametag", "contents" : "npc.setDisplayNametag(${1})" },
		{ "trigger": "npc.setDropPools", "contents" : "npc.setDropPools(${1})" },
		{ "trigger": "npc.setInteractive", "contents" : "npc.setInteractive(${1})" },
		{ "trigger": "npc.setItemSlot", "contents" : "npc.setItemSlot(${1})" },
		{ "trigger": "npc.setKeepAlive", "contents" : "npc.setKeepAlive(${1})" },
		{ "trigger": "npc.setLounging", "contents" : "npc.setLounging(${1})" },
		{ "trigger": "npc.setOfferedQuests", "contents" : "npc.setOfferedQuests(${1})" },
		{ "trigger": "npc.setPersistent", "contents" : "npc.setPersistent(${1})" },
		{ "trigger": "npc.setShifting", "contents" : "npc.setShifting(${1})" },
		{ "trigger": "npc.setStatusText", "contents" : "npc.setStatusText(${1})" },
		{ "trigger": "npc.setTurnInQuests", "contents" : "npc.setTurnInQuests(${1})" },
		{ "trigger": "npc.setUniqueId", "contents" : "npc.setUniqueId(${1})" },
		{ "trigger": "npc.species", "contents" : "npc.species(${1})" },
		{ "trigger": "npc.toAbsolutePosition", "contents" : "npc.toAbsolutePosition(${1})" },

		{ "trigger": "object.boundBox", "contents" : "object.boundBox(${1})" },
		{ "trigger": "object.direction", "contents" : "object.direction(${1})" },
		{ "trigger": "object.getInputNodeIds", "contents" : "object.getInputNodeIds(${1})" },
		{ "trigger": "object.getInputNodeLevel", "contents" : "object.getInputNodeLevel(${1})" },
		{ "trigger": "object.getInputNodePosition", "contents" : "object.getInputNodePosition(${1})" },
		{ "trigger": "object.getLightColor", "contents" : "object.getLightColor(${1})" },
		{ "trigger": "object.getOutputNodeIds", "contents" : "object.getOutputNodeIds(${1})" },
		{ "trigger": "object.getOutputNodeLevel", "contents" : "object.getOutputNodeLevel(${1})" },
		{ "trigger": "object.getOutputNodePosition", "contents" : "object.getOutputNodePosition(${1})" },
		{ "trigger": "object.health", "contents" : "object.health(${1})" },
		{ "trigger": "object.inputNodeCount", "contents" : "object.inputNodeCount(${1})" },
		{ "trigger": "object.isInputNodeConnected", "contents" : "object.isInputNodeConnected(${1})" },
		{ "trigger": "object.isOutputNodeConnected", "contents" : "object.isOutputNodeConnected(${1})" },
		{ "trigger": "object.isTouching", "contents" : "object.isTouching(${1})" },
		{ "trigger": "object.level", "contents" : "object.level(${1})" },
		{ "trigger": "object.name", "contents" : "object.name(${1})" },
		{ "trigger": "object.outputNodeCount", "contents" : "object.outputNodeCount(${1})" },
		{ "trigger": "object.position", "contents" : "object.position(${1})" },
		{ "trigger": "object.say", "contents" : "object.say(${1})" },
		{ "trigger": "object.sayPortrait", "contents" : "object.sayPortrait(${1})" },
		{ "trigger": "object.setAllOutputNodes", "contents" : "object.setAllOutputNodes(${1})" },
		{ "trigger": "object.setAnimationParameter", "contents" : "object.setAnimationParameter(${1})" },
		{ "trigger": "object.setConfigParameter", "contents" : "object.setConfigParameter(${1})" },
		{ "trigger": "object.setDamageSources", "contents" : "object.setDamageSources(${1})" },
		{ "trigger": "object.setHealth", "contents" : "object.setHealth(${1})" },
		{ "trigger": "object.setInteractive", "contents" : "object.setInteractive(${1})" },
		{ "trigger": "object.setLightColor", "contents" : "object.setLightColor(${1})" },
		{ "trigger": "object.setMaterialSpaces", "contents" : "object.setMaterialSpaces(${1})" },
		{ "trigger": "object.setOfferedQuests", "contents" : "object.setOfferedQuests(${1})" },
		{ "trigger": "object.setOutputNodeLevel", "contents" : "object.setOutputNodeLevel(${1})" },
		{ "trigger": "object.setProcessingDirectives", "contents" : "object.setProcessingDirectives(${1})" },
		{ "trigger": "object.setSoundEffectEnabled", "contents" : "object.setSoundEffectEnabled(${1})" },
		{ "trigger": "object.setTurnInQuests", "contents" : "object.setTurnInQuests(${1})" },
		{ "trigger": "object.setUniqueId", "contents" : "object.setUniqueId(${1})" },
		{ "trigger": "object.smash", "contents" : "object.smash(${1})" },
		{ "trigger": "object.toAbsolutePosition", "contents" : "object.toAbsolutePosition(${1})" },
		{ "trigger": "object.uniqueId", "contents" : "object.uniqueId(${1})" },

		{ "trigger": "objectAnimator.animationParameter", "contents" : "objectAnimator.animationParameter(${1})" },
		{ "trigger": "objectAnimator.direction", "contents" : "objectAnimator.direction(${1})" },
		{ "trigger": "objectAnimator.getParameter", "contents" : "objectAnimator.getParameter(${1})" },
		{ "trigger": "objectAnimator.position", "contents" : "objectAnimator.position(${1})" },

		{ "trigger": "pane.containerEntityId", "contents" : "pane.containerEntityId(${1})" },
		{ "trigger": "pane.dismiss", "contents" : "pane.dismiss(${1})" },
		{ "trigger": "pane.playerEntityId", "contents" : "pane.playerEntityId(${1})" },
		{ "trigger": "pane.sourceEntity", "contents" : "pane.sourceEntity(${1})" },

		{ "trigger": "physics.setCollisionPosition", "contents" : "physics.setCollisionPosition(${1})" },
		{ "trigger": "physics.setForceEnabled", "contents" : "physics.setForceEnabled(${1})" },

		{ "trigger": "player.addBookmark", "contents" : "player.addBookmark(${1})" },
		{ "trigger": "player.altHandItem", "contents" : "player.altHandItem(${1})" },
		{ "trigger": "player.altHandItemTags", "contents" : "player.altHandItemTags(${1})" },
		{ "trigger": "player.availableTechs", "contents" : "player.availableTechs(${1})" },
		{ "trigger": "player.canStartQuest", "contents" : "player.canStartQuest(${1})" },
		{ "trigger": "player.cleanupItems", "contents" : "player.cleanupItems(${1})" },
		{ "trigger": "player.completeMission", "contents" : "player.completeMission(${1})" },
		{ "trigger": "player.confirm", "contents" : "player.confirm(${1})" },
		{ "trigger": "player.consumeItemWithParameter", "contents" : "player.consumeItemWithParameter(${1})" },
		{ "trigger": "player.consumeTaggedItem", "contents" : "player.consumeTaggedItem(${1})" },
		{ "trigger": "player.enableMission", "contents" : "player.enableMission(${1})" },
		{ "trigger": "player.enableTech", "contents" : "player.enableTech(${1})" },
		{ "trigger": "player.enabledTechs", "contents" : "player.enabledTechs(${1})" },
		{ "trigger": "player.equipTech", "contents" : "player.equipTech(${1})" },
		{ "trigger": "player.equippedItem", "contents" : "player.equippedItem(${1})" },
		{ "trigger": "player.equippedTech", "contents" : "player.equippedTech(${1})" },
		{ "trigger": "player.essentialItem", "contents" : "player.essentialItem(${1})" },
		{ "trigger": "player.gender", "contents" : "player.gender(${1})" },
		{ "trigger": "player.getItemWithParameter", "contents" : "player.getItemWithParameter(${1})" },
		{ "trigger": "player.giveBlueprint", "contents" : "player.giveBlueprint(${1})" },
		{ "trigger": "player.giveEssentialItem", "contents" : "player.giveEssentialItem(${1})" },
		{ "trigger": "player.giveItem", "contents" : "player.giveItem(${1})" },
		{ "trigger": "player.hasCompletedQuest", "contents" : "player.hasCompletedQuest(${1})" },
		{ "trigger": "player.hasCountOfItem", "contents" : "player.hasCountOfItem(${1})" },
		{ "trigger": "player.hasItem", "contents" : "player.hasItem(${1})" },
		{ "trigger": "player.hasItemWithParameter", "contents" : "player.hasItemWithParameter(${1})" },
		{ "trigger": "player.hasQuest", "contents" : "player.hasQuest(${1})" },
		{ "trigger": "player.introComplete", "contents" : "player.introComplete(${1})" },
		{ "trigger": "player.inventoryTags", "contents" : "player.inventoryTags(${1})" },
		{ "trigger": "player.isLounging", "contents" : "player.isLounging(${1})" },
		{ "trigger": "player.itemsWithTag", "contents" : "player.itemsWithTag(${1})" },
		{ "trigger": "player.lounge", "contents" : "player.lounge(${1})" },
		{ "trigger": "player.makeTechAvailable", "contents" : "player.makeTechAvailable(${1})" },
		{ "trigger": "player.makeTechUnavailable", "contents" : "player.makeTechUnavailable(${1})" },
		{ "trigger": "player.ownShipWorldId", "contents" : "player.ownShipWorldId(${1})" },
		{ "trigger": "player.playCinematic", "contents" : "player.playCinematic(${1})" },
		{ "trigger": "player.playTime", "contents" : "player.playTime(${1})" },
		{ "trigger": "player.primaryHandItem", "contents" : "player.primaryHandItem(${1})" },
		{ "trigger": "player.primaryHandItemTags", "contents" : "player.primaryHandItemTags(${1})" },
		{ "trigger": "player.printWorldId", "contents" : "player.printWorldId(${1})" },
		{ "trigger": "player.radioMessage", "contents" : "player.radioMessage(${1})" },
		{ "trigger": "player.recordEvent", "contents" : "player.recordEvent(${1})" },
		{ "trigger": "player.removeEssentialItem", "contents" : "player.removeEssentialItem(${1})" },
		{ "trigger": "player.serverUuid", "contents" : "player.serverUuid(${1})" },
		{ "trigger": "player.setEquippedItem", "contents" : "player.setEquippedItem(${1})" },
		{ "trigger": "player.setIntroComplete", "contents" : "player.setIntroComplete(${1})" },
		{ "trigger": "player.setUniverseFlag", "contents" : "player.setUniverseFlag(${1})" },
		{ "trigger": "player.shipUpgrades", "contents" : "player.shipUpgrades(${1})" },
		{ "trigger": "player.species", "contents" : "player.species(${1})" },
		{ "trigger": "player.startQuest", "contents" : "player.startQuest(${1})" },
		{ "trigger": "player.takeItem", "contents" : "player.takeItem(${1})" },
		{ "trigger": "player.warp", "contents" : "player.warp(${1})" },

		{ "trigger": "playerCompanions.getCompanions", "contents" : "playerCompanions.getCompanions(${1})" },
		{ "trigger": "playerCompanions.setCompanions", "contents" : "playerCompanions.setCompanions(${1})" },

		{ "trigger": "projectile.collision", "contents" : "projectile.collision(${1})" },
		{ "trigger": "projectile.die", "contents" : "projectile.die(${1})" },
		{ "trigger": "projectile.processAction", "contents" : "projectile.processAction(${1})" },
		{ "trigger": "projectile.setPower", "contents" : "projectile.setPower(${1})" },
		{ "trigger": "projectile.setTimeToLive", "contents" : "projectile.setTimeToLive(${1})" },
		{ "trigger": "projectile.sourceEntity", "contents" : "projectile.sourceEntity(${1})" },
		{ "trigger": "projectile.timeToLive", "contents" : "projectile.timeToLive(${1})" },
		{ "trigger": "projectile.getParameter", "contents" : "projectile.getParameter(${1})" },
		{ "trigger": "projectile.power", "contents" : "projectile.power(${1})" },
		{ "trigger": "projectile.powerMultiplier", "contents" : "projectile.powerMultiplier(${1})" },

		{ "trigger": "quest.addReward", "contents" : "quest.addReward(${1})" },
		{ "trigger": "quest.complete", "contents" : "quest.complete(${1})" },
		{ "trigger": "quest.fail", "contents" : "quest.fail(${1})" },
		{ "trigger": "quest.parameters", "contents" : "quest.parameters(${1})" },
		{ "trigger": "quest.questArcDescriptor", "contents" : "quest.questArcDescriptor(${1})" },
		{ "trigger": "quest.questArcPosition", "contents" : "quest.questArcPosition(${1})" },
		{ "trigger": "quest.questDescriptor", "contents" : "quest.questDescriptor(${1})" },
		{ "trigger": "quest.questId", "contents" : "quest.questId(${1})" },
		{ "trigger": "quest.seed", "contents" : "quest.seed(${1})" },
		{ "trigger": "quest.serverUuid", "contents" : "quest.serverUuid(${1})" },
		{ "trigger": "quest.setCanTurnIn", "contents" : "quest.setCanTurnIn(${1})" },
		{ "trigger": "quest.setCompassDirection", "contents" : "quest.setCompassDirection(${1})" },
		{ "trigger": "quest.setCompletionText", "contents" : "quest.setCompletionText(${1})" },
		{ "trigger": "quest.setFailureText", "contents" : "quest.setFailureText(${1})" },
		{ "trigger": "quest.setIndicators", "contents" : "quest.setIndicators(${1})" },
		{ "trigger": "quest.setObjectiveList", "contents" : "quest.setObjectiveList(${1})" },
		{ "trigger": "quest.setParameter", "contents" : "quest.setParameter(${1})" },
		{ "trigger": "quest.setPortrait", "contents" : "quest.setPortrait(${1})" },
		{ "trigger": "quest.setPortraitTitle", "contents" : "quest.setPortraitTitle(${1})" },
		{ "trigger": "quest.setProgress", "contents" : "quest.setProgress(${1})" },
		{ "trigger": "quest.setText", "contents" : "quest.setText(${1})" },
		{ "trigger": "quest.setTitle", "contents" : "quest.setTitle(${1})" },
		{ "trigger": "quest.state", "contents" : "quest.state(${1})" },
		{ "trigger": "quest.templateId", "contents" : "quest.templateId(${1})" },
		{ "trigger": "quest.worldId", "contents" : "quest.worldId(${1})" },

		{ "trigger": "root.assetJson", "contents" : "root.assetJson(${1})" },
		{ "trigger": "root.behaviorModule", "contents" : "root.behaviorModule(${1})" },
		{ "trigger": "root.createItem", "contents" : "root.createItem(${1})" },
		{ "trigger": "root.createTreasure", "contents" : "root.createTreasure(${1})" },
		{ "trigger": "root.evalFunction", "contents" : "root.evalFunction(${1})" },
		{ "trigger": "root.evalFunction2", "contents" : "root.evalFunction2(${1})" },
		{ "trigger": "root.generateName", "contents" : "root.generateName(${1})" },
		{ "trigger": "root.getMatchingTenants", "contents" : "root.getMatchingTenants(${1})" },
		{ "trigger": "root.imageSize", "contents" : "root.imageSize(${1})" },
		{ "trigger": "root.imageSpaces", "contents" : "root.imageSpaces(${1})" },
		{ "trigger": "root.isTreasurePool", "contents" : "root.isTreasurePool(${1})" },
		{ "trigger": "root.itemConfig", "contents" : "root.itemConfig(${1})" },
		{ "trigger": "root.itemHasTag", "contents" : "root.itemHasTag(${1})" },
		{ "trigger": "root.itemTags", "contents" : "root.itemTags(${1})" },
		{ "trigger": "root.itemType", "contents" : "root.itemType(${1})" },
		{ "trigger": "root.liquidStatusEffects", "contents" : "root.liquidStatusEffects(${1})" },
		{ "trigger": "root.loadVersionedJson", "contents" : "root.loadVersionedJson(${1})" },
		{ "trigger": "root.makeCurrentVersionedJson", "contents" : "root.makeCurrentVersionedJson(${1})" },
		{ "trigger": "root.monsterPortrait", "contents" : "root.monsterPortrait(${1})" },
		{ "trigger": "root.nonEmptyRegion", "contents" : "root.nonEmptyRegion(${1})" },
		{ "trigger": "root.npcConfig", "contents" : "root.npcConfig(${1})" },
		{ "trigger": "root.npcPortrait", "contents" : "root.npcPortrait(${1})" },
		{ "trigger": "root.projectileConfig", "contents" : "root.projectileConfig(${1})" },
		{ "trigger": "root.projectileGravityMultiplier", "contents" : "root.projectileGravityMultiplier(${1})" },
		{ "trigger": "root.questConfig", "contents" : "root.questConfig(${1})" },
		{ "trigger": "root.recipesForItem", "contents" : "root.recipesForItem(${1})" },
		{ "trigger": "root.tenantConfig", "contents" : "root.tenantConfig(${1})" },
		{ "trigger": "root.materialFootstepSound", "contents" : "root.materialFootstepSound(${1})" },
		{ "trigger": "root.materialMiningSound", "contents" : "root.materialMiningSound(${1})" },

		{ "trigger": "sb.jsonMerge", "contents" : "sb.jsonMerge(${1})" },
		{ "trigger": "sb.logError", "contents" : "sb.logError(${1})" },
		{ "trigger": "sb.logInfo", "contents" : "sb.logInfo(${1})" },
		{ "trigger": "sb.logWarn", "contents" : "sb.logWarn(${1})" },
		{ "trigger": "sb.makeRandomSource", "contents" : "sb.makeRandomSource(${1})" },
		{ "trigger": "sb.makeUuid", "contents" : "sb.makeUuid(${1})" },
		{ "trigger": "sb.nrand", "contents" : "sb.nrand(${1})" },
		{ "trigger": "sb.print", "contents" : "sb.print(${1})" },
		{ "trigger": "sb.printJson", "contents" : "sb.printJson(${1})" },
		{ "trigger": "sb.replaceTags", "contents" : "sb.replaceTags(${1})" },
		{ "trigger": "sb.setLogMap", "contents" : "sb.setLogMap(${1})" },
		{ "trigger": "sb.staticRandomDouble", "contents" : "sb.staticRandomDouble(${1})" },
		{ "trigger": "sb.staticRandomDoubleRange", "contents" : "sb.staticRandomDoubleRange(${1})" },
		{ "trigger": "sb.staticRandomI32", "contents" : "sb.staticRandomI32(${1})" },
		{ "trigger": "sb.staticRandomI32Range", "contents" : "sb.staticRandomI32Range(${1})" },
		{ "trigger": "sb.jsonQuery", "contents" : "sb.jsonQuery(${1})" },
		{ "trigger": "sb.makePerlinSource", "contents" : "sb.makePerlinSource(${1})" },

		{ "trigger": "stagehand.die", "contents" : "stagehand.die(${1})" },
		{ "trigger": "stagehand.id", "contents" : "stagehand.id(${1})" },
		{ "trigger": "stagehand.position", "contents" : "stagehand.position(${1})" },
		{ "trigger": "stagehand.setPosition", "contents" : "stagehand.setPosition(${1})" },
		{ "trigger": "stagehand.setUniqueId", "contents" : "stagehand.setUniqueId(${1})" },
		{ "trigger": "stagehand.typeName", "contents" : "stagehand.typeName(${1})" },

		{ "trigger": "status.addEphemeralEffect", "contents" : "status.addEphemeralEffect(${1})" },
		{ "trigger": "status.addEphemeralEffects", "contents" : "status.addEphemeralEffects(${1})" },
		{ "trigger": "status.addPersistentEffect", "contents" : "status.addPersistentEffect(${1})" },
		{ "trigger": "status.addPersistentEffects", "contents" : "status.addPersistentEffects(${1})" },
		{ "trigger": "status.clearAllPersistentEffects", "contents" : "status.clearAllPersistentEffects(${1})" },
		{ "trigger": "status.clearEphemeralEffects", "contents" : "status.clearEphemeralEffects(${1})" },
		{ "trigger": "status.clearPersistentEffects", "contents" : "status.clearPersistentEffects(${1})" },
		{ "trigger": "status.consumeResource", "contents" : "status.consumeResource(${1})" },
		{ "trigger": "status.damageTakenSince", "contents" : "status.damageTakenSince(${1})" },
		{ "trigger": "status.inflictedHitsSince", "contents" : "status.inflictedHitsSince(${1})" },
		{ "trigger": "status.isResource", "contents" : "status.isResource(${1})" },
		{ "trigger": "status.modifyResource", "contents" : "status.modifyResource(${1})" },
		{ "trigger": "status.modifyResourcePercentage", "contents" : "status.modifyResourcePercentage(${1})" },
		{ "trigger": "status.overConsumeResource", "contents" : "status.overConsumeResource(${1})" },
		{ "trigger": "status.removeEphemeralEffect", "contents" : "status.removeEphemeralEffect(${1})" },
		{ "trigger": "status.resetAllResources", "contents" : "status.resetAllResources(${1})" },
		{ "trigger": "status.resetResource", "contents" : "status.resetResource(${1})" },
		{ "trigger": "status.resource", "contents" : "status.resource(${1})" },
		{ "trigger": "status.resourceLocked", "contents" : "status.resourceLocked(${1})" },
		{ "trigger": "status.resourceMax", "contents" : "status.resourceMax(${1})" },
		{ "trigger": "status.resourceNames", "contents" : "status.resourceNames(${1})" },
		{ "trigger": "status.resourcePercentage", "contents" : "status.resourcePercentage(${1})" },
		{ "trigger": "status.resourcePositive", "contents" : "status.resourcePositive(${1})" },
		{ "trigger": "status.setPersistentEffects", "contents" : "status.setPersistentEffects(${1})" },
		{ "trigger": "status.setResource", "contents" : "status.setResource(${1})" },
		{ "trigger": "status.setResourceLocked", "contents" : "status.setResourceLocked(${1})" },
		{ "trigger": "status.setResourcePercentage", "contents" : "status.setResourcePercentage(${1})" },
		{ "trigger": "status.setStatusProperty", "contents" : "status.setStatusProperty(${1})" },
		{ "trigger": "status.stat", "contents" : "status.stat(${1})" },
		{ "trigger": "status.statPositive", "contents" : "status.statPositive(${1})" },
		{ "trigger": "status.statusProperty", "contents" : "status.statusProperty(${1})" },
		{ "trigger": "status.functionName", "contents" : "status.functionName(${1})" },
		{ "trigger": "status.getPersistentEffects", "contents" : "status.getPersistentEffects(${1})" },
		{ "trigger": "status.giveResource", "contents" : "status.giveResource(${1})" },

		{ "trigger": "tech.aimPosition", "contents" : "tech.aimPosition(${1})" },
		{ "trigger": "tech.parentLounging", "contents" : "tech.parentLounging(${1})" },
		{ "trigger": "tech.setParentDirectives", "contents" : "tech.setParentDirectives(${1})" },
		{ "trigger": "tech.setParentOffset", "contents" : "tech.setParentOffset(${1})" },
		{ "trigger": "tech.setParentState", "contents" : "tech.setParentState(${1})" },
		{ "trigger": "tech.setToolUsageSuppressed", "contents" : "tech.setToolUsageSuppressed(${1})" },
		{ "trigger": "tech.setVisible", "contents" : "tech.setVisible(${1})" },
		{ "trigger": "tech.setParentHidden", "contents" : "tech.setParentHidden(${1})" },

		{ "trigger": "universe.adminBroadcast", "contents" : "universe.adminBroadcast(${1})" },
		{ "trigger": "universe.adminWhisper", "contents" : "universe.adminWhisper(${1})" },
		{ "trigger": "universe.clientIds", "contents" : "universe.clientIds(${1})" },
		{ "trigger": "universe.clientNick", "contents" : "universe.clientNick(${1})" },
		{ "trigger": "universe.findNick", "contents" : "universe.findNick(${1})" },
		{ "trigger": "universe.isAdmin", "contents" : "universe.isAdmin(${1})" },
		{ "trigger": "universe.isConnectedClient", "contents" : "universe.isConnectedClient(${1})" },
		{ "trigger": "universe.isPvp", "contents" : "universe.isPvp(${1})" },
		{ "trigger": "universe.numberOfClients", "contents" : "universe.numberOfClients(${1})" },
		{ "trigger": "universe.setPvp", "contents" : "universe.setPvp(${1})" },

		{ "trigger": "vehicle.aimPosition", "contents" : "vehicle.aimPosition(${1})" },
		{ "trigger": "vehicle.controlHeld", "contents" : "vehicle.controlHeld(${1})" },
		{ "trigger": "vehicle.destroy", "contents" : "vehicle.destroy(${1})" },
		{ "trigger": "vehicle.entityLoungingIn", "contents" : "vehicle.entityLoungingIn(${1})" },
		{ "trigger": "vehicle.setDamageTeam", "contents" : "vehicle.setDamageTeam(${1})" },
		{ "trigger": "vehicle.setLoungeDance", "contents" : "vehicle.setLoungeDance(${1})" },
		{ "trigger": "vehicle.setLoungeEmote", "contents" : "vehicle.setLoungeEmote(${1})" },
		{ "trigger": "vehicle.setLoungeEnabled", "contents" : "vehicle.setLoungeEnabled(${1})" },
		{ "trigger": "vehicle.setLoungeOrientation", "contents" : "vehicle.setLoungeOrientation(${1})" },
		{ "trigger": "vehicle.setLoungeStatusEffects", "contents" : "vehicle.setLoungeStatusEffects(${1})" },
		{ "trigger": "vehicle.setMovingCollisionEnabled", "contents" : "vehicle.setMovingCollisionEnabled(${1})" },
		{ "trigger": "vehicle.setPersistent", "contents" : "vehicle.setPersistent(${1})" },
		{ "trigger": "vehicle.setInteractive", "contents" : "vehicle.setInteractive(${1})" },

		{ "trigger": "widget.addListItem", "contents" : "widget.addListItem(${1})" },
		{ "trigger": "widget.blur", "contents" : "widget.blur(${1})" },
		{ "trigger": "widget.clearListItems", "contents" : "widget.clearListItems(${1})" },
		{ "trigger": "widget.focus", "contents" : "widget.focus(${1})" },
		{ "trigger": "widget.getChecked", "contents" : "widget.getChecked(${1})" },
		{ "trigger": "widget.getData", "contents" : "widget.getData(${1})" },
		{ "trigger": "widget.getListSelected", "contents" : "widget.getListSelected(${1})" },
		{ "trigger": "widget.getPosition", "contents" : "widget.getPosition(${1})" },
		{ "trigger": "widget.getSelectedOption", "contents" : "widget.getSelectedOption(${1})" },
		{ "trigger": "widget.getSize", "contents" : "widget.getSize(${1})" },
		{ "trigger": "widget.getSliderValue", "contents" : "widget.getSliderValue(${1})" },
		{ "trigger": "widget.getText", "contents" : "widget.getText(${1})" },
		{ "trigger": "widget.itemGridItems", "contents" : "widget.itemGridItems(${1})" },
		{ "trigger": "widget.playSound", "contents" : "widget.playSound(${1})" },
		{ "trigger": "widget.removeListItem", "contents" : "widget.removeListItem(${1})" },
		{ "trigger": "widget.setButtonEnabled", "contents" : "widget.setButtonEnabled(${1})" },
		{ "trigger": "widget.setButtonImage", "contents" : "widget.setButtonImage(${1})" },
		{ "trigger": "widget.setButtonImages", "contents" : "widget.setButtonImages(${1})" },
		{ "trigger": "widget.setButtonOverlayImage", "contents" : "widget.setButtonOverlayImage(${1})" },
		{ "trigger": "widget.setData", "contents" : "widget.setData(${1})" },
		{ "trigger": "widget.setFontColor", "contents" : "widget.setFontColor(${1})" },
		{ "trigger": "widget.setImage", "contents" : "widget.setImage(${1})" },
		{ "trigger": "widget.setImageRotation", "contents" : "widget.setImageRotation(${1})" },
		{ "trigger": "widget.setImageScale", "contents" : "widget.setImageScale(${1})" },
		{ "trigger": "widget.setListSelected", "contents" : "widget.setListSelected(${1})" },
		{ "trigger": "widget.setOptionEnabled", "contents" : "widget.setOptionEnabled(${1})" },
		{ "trigger": "widget.setOptionVisible", "contents" : "widget.setOptionVisible(${1})" },
		{ "trigger": "widget.setPosition", "contents" : "widget.setPosition(${1})" },
		{ "trigger": "widget.setProgress", "contents" : "widget.setProgress(${1})" },
		{ "trigger": "widget.setSelectedOption", "contents" : "widget.setSelectedOption(${1})" },
		{ "trigger": "widget.setSize", "contents" : "widget.setSize(${1})" },
		{ "trigger": "widget.setText", "contents" : "widget.setText(${1})" },
		{ "trigger": "widget.setVisible", "contents" : "widget.setVisible(${1})" },

		{ "trigger": "world.breakObject", "contents" : "world.breakObject(${1})" },
		{ "trigger": "world.breathable", "contents" : "world.breathable(${1})" },
		{ "trigger": "world.callScriptedEntity", "contents" : "world.callScriptedEntity(${1})" },
		{ "trigger": "world.collisionBlocksAlongLine", "contents" : "world.collisionBlocksAlongLine(${1})" },
		{ "trigger": "world.containerAddItems", "contents" : "world.containerAddItems(${1})" },
		{ "trigger": "world.containerAvailable", "contents" : "world.containerAvailable(${1})" },
		{ "trigger": "world.containerClose", "contents" : "world.containerClose(${1})" },
		{ "trigger": "world.containerConsume", "contents" : "world.containerConsume(${1})" },
		{ "trigger": "world.containerConsumeAt", "contents" : "world.containerConsumeAt(${1})" },
		{ "trigger": "world.containerItemApply", "contents" : "world.containerItemApply(${1})" },
		{ "trigger": "world.containerItemAt", "contents" : "world.containerItemAt(${1})" },
		{ "trigger": "world.containerItems", "contents" : "world.containerItems(${1})" },
		{ "trigger": "world.containerItemsCanFit", "contents" : "world.containerItemsCanFit(${1})" },
		{ "trigger": "world.containerItemsFitWhere", "contents" : "world.containerItemsFitWhere(${1})" },
		{ "trigger": "world.containerOpen", "contents" : "world.containerOpen(${1})" },
		{ "trigger": "world.containerPutItemsAt", "contents" : "world.containerPutItemsAt(${1})" },
		{ "trigger": "world.containerSize", "contents" : "world.containerSize(${1})" },
		{ "trigger": "world.containerStackItems", "contents" : "world.containerStackItems(${1})" },
		{ "trigger": "world.containerSwapItems", "contents" : "world.containerSwapItems(${1})" },
		{ "trigger": "world.containerSwapItemsNoCombine", "contents" : "world.containerSwapItemsNoCombine(${1})" },
		{ "trigger": "world.containerTakeAll", "contents" : "world.containerTakeAll(${1})" },
		{ "trigger": "world.containerTakeAt", "contents" : "world.containerTakeAt(${1})" },
		{ "trigger": "world.containerTakeNumItemsAt", "contents" : "world.containerTakeNumItemsAt(${1})" },
		{ "trigger": "world.damageTiles", "contents" : "world.damageTiles(${1})" },
		{ "trigger": "world.day", "contents" : "world.day(${1})" },
		{ "trigger": "world.debugLine", "contents" : "world.debugLine(${1})" },
		{ "trigger": "world.debugPoint", "contents" : "world.debugPoint(${1})" },
		{ "trigger": "world.debugPoly", "contents" : "world.debugPoly(${1})" },
		{ "trigger": "world.debugText", "contents" : "world.debugText(${1})" },
		{ "trigger": "world.destroyLiquid", "contents" : "world.destroyLiquid(${1})" },
		{ "trigger": "world.distance", "contents" : "world.distance(${1})" },
		{ "trigger": "world.dungeonId", "contents" : "world.dungeonId(${1})" },
		{ "trigger": "world.entityCanDamage", "contents" : "world.entityCanDamage(${1})" },
		{ "trigger": "world.entityDamageTeam", "contents" : "world.entityDamageTeam(${1})" },
		{ "trigger": "world.entityExists", "contents" : "world.entityExists(${1})" },
		{ "trigger": "world.entityHandItem", "contents" : "world.entityHandItem(${1})" },
		{ "trigger": "world.entityHandItemDescriptor", "contents" : "world.entityHandItemDescriptor(${1})" },
		{ "trigger": "world.entityHealth", "contents" : "world.entityHealth(${1})" },
		{ "trigger": "world.entityLineQuery", "contents" : "world.entityLineQuery(${1})" },
		{ "trigger": "world.entityMoney", "contents" : "world.entityMoney(${1})" },
		{ "trigger": "world.entityName", "contents" : "world.entityName(${1})" },
		{ "trigger": "world.entityPortrait", "contents" : "world.entityPortrait(${1})" },
		{ "trigger": "world.entityPosition", "contents" : "world.entityPosition(${1})" },
		{ "trigger": "world.entityQuery", "contents" : "world.entityQuery(${1})" },
		{ "trigger": "world.entitySpecies", "contents" : "world.entitySpecies(${1})" },
		{ "trigger": "world.entityType", "contents" : "world.entityType(${1})" },
		{ "trigger": "world.entityUniqueId", "contents" : "world.entityUniqueId(${1})" },
		{ "trigger": "world.entityVelocity", "contents" : "world.entityVelocity(${1})" },
		{ "trigger": "world.farmableStage", "contents" : "world.farmableStage(${1})" },
		{ "trigger": "world.findPlatformerPath", "contents" : "world.findPlatformerPath(${1})" },
		{ "trigger": "world.forceDestroyLiquid", "contents" : "world.forceDestroyLiquid(${1})" },
		{ "trigger": "world.getProperty", "contents" : "world.getProperty(${1})" },
		{ "trigger": "world.gravity", "contents" : "world.gravity(${1})" },
		{ "trigger": "world.isMonster", "contents" : "world.isMonster(${1})" },
		{ "trigger": "world.isNpc", "contents" : "world.isNpc(${1})" },
		{ "trigger": "world.isTileProtected", "contents" : "world.isTileProtected(${1})" },
		{ "trigger": "world.isVisibleToPlayer", "contents" : "world.isVisibleToPlayer(${1})" },
		{ "trigger": "world.itemDropQuery", "contents" : "world.itemDropQuery(${1})" },
		{ "trigger": "world.lightLevel", "contents" : "world.lightLevel(${1})" },
		{ "trigger": "world.lineCollision", "contents" : "world.lineCollision(${1})" },
		{ "trigger": "world.lineTileCollision", "contents" : "world.lineTileCollision(${1})" },
		{ "trigger": "world.liquidAt", "contents" : "world.liquidAt(${1})" },
		{ "trigger": "world.loadRegion", "contents" : "world.loadRegion(${1})" },
		{ "trigger": "world.loadUniqueEntity", "contents" : "world.loadUniqueEntity(${1})" },
		{ "trigger": "world.loungeableOccupied", "contents" : "world.loungeableOccupied(${1})" },
		{ "trigger": "world.loungeableQuery", "contents" : "world.loungeableQuery(${1})" },
		{ "trigger": "world.magnitude", "contents" : "world.magnitude(${1})" },
		{ "trigger": "world.material", "contents" : "world.material(${1})" },
		{ "trigger": "world.mod", "contents" : "world.mod(${1})" },
		{ "trigger": "world.monsterQuery", "contents" : "world.monsterQuery(${1})" },
		{ "trigger": "world.monsterType", "contents" : "world.monsterType(${1})" },
		{ "trigger": "world.npcLineQuery", "contents" : "world.npcLineQuery(${1})" },
		{ "trigger": "world.npcQuery", "contents" : "world.npcQuery(${1})" },
		{ "trigger": "world.objectLineQuery", "contents" : "world.objectLineQuery(${1})" },
		{ "trigger": "world.objectQuery", "contents" : "world.objectQuery(${1})" },
		{ "trigger": "world.objectSpaces", "contents" : "world.objectSpaces(${1})" },
		{ "trigger": "world.placeMaterial", "contents" : "world.placeMaterial(${1})" },
		{ "trigger": "world.placeMod", "contents" : "world.placeMod(${1})" },
		{ "trigger": "world.placeObject", "contents" : "world.placeObject(${1})" },
		{ "trigger": "world.platformerPathStart", "contents" : "world.platformerPathStart(${1})" },
		{ "trigger": "world.playerQuery", "contents" : "world.playerQuery(${1})" },
		{ "trigger": "world.pointTileCollision", "contents" : "world.pointTileCollision(${1})" },
		{ "trigger": "world.polyCollision", "contents" : "world.polyCollision(${1})" },
		{ "trigger": "world.polyContains", "contents" : "world.polyContains(${1})" },
		{ "trigger": "world.rectCollision", "contents" : "world.rectCollision(${1})" },
		{ "trigger": "world.rectTileCollision", "contents" : "world.rectTileCollision(${1})" },
		{ "trigger": "world.resolvePolyCollision", "contents" : "world.resolvePolyCollision(${1})" },
		{ "trigger": "world.sendEntityMessage", "contents" : "world.sendEntityMessage(${1})" },
		{ "trigger": "world.setProperty", "contents" : "world.setProperty(${1})" },
		{ "trigger": "world.setTileProtection", "contents" : "world.setTileProtection(${1})" },
		{ "trigger": "world.setUniqueId", "contents" : "world.setUniqueId(${1})" },
		{ "trigger": "world.spawnItem", "contents" : "world.spawnItem(${1})" },
		{ "trigger": "world.spawnLiquid", "contents" : "world.spawnLiquid(${1})" },
		{ "trigger": "world.spawnMonster", "contents" : "world.spawnMonster(${1})" },
		{ "trigger": "world.spawnNpc", "contents" : "world.spawnNpc(${1})" },
		{ "trigger": "world.spawnProjectile", "contents" : "world.spawnProjectile(${1})" },
		{ "trigger": "world.spawnStagehand", "contents" : "world.spawnStagehand(${1})" },
		{ "trigger": "world.spawnTreasure", "contents" : "world.spawnTreasure(${1})" },
		{ "trigger": "world.spawnVehicle", "contents" : "world.spawnVehicle(${1})" },
		{ "trigger": "world.stagehandType", "contents" : "world.stagehandType(${1})" },
		{ "trigger": "world.takeItemDrop", "contents" : "world.takeItemDrop(${1})" },
		{ "trigger": "world.tileIsOccupied", "contents" : "world.tileIsOccupied(${1})" },
		{ "trigger": "world.time", "contents" : "world.time(${1})" },
		{ "trigger": "world.timeOfDay", "contents" : "world.timeOfDay(${1})" },
		{ "trigger": "world.underground", "contents" : "world.underground(${1})" },
		{ "trigger": "world.windLevel", "contents" : "world.windLevel(${1})" },
		{ "trigger": "world.xwrap", "contents" : "world.xwrap(${1})" },
		{ "trigger": "world.damageTileArea", "contents" : "world.damageTileArea(${1})" },
		{ "trigger": "world.dayLength", "contents" : "world.dayLength(${1})" },
		{ "trigger": "world.entityAggressive", "contents" : "world.entityAggressive(${1})" },
		{ "trigger": "world.entityDescription", "contents" : "world.entityDescription(${1})" },
		{ "trigger": "world.entityGender", "contents" : "world.entityGender(${1})" },
		{ "trigger": "world.entityHasCountOfItem", "contents" : "world.entityHasCountOfItem(${1})" },
		{ "trigger": "world.getObjectParameter", "contents" : "world.getObjectParameter(${1})" },
		{ "trigger": "world.isPlayerModified", "contents" : "world.isPlayerModified(${1})" },
		{ "trigger": "world.liquidAlongLine", "contents" : "world.liquidAlongLine(${1})" },
		{ "trigger": "world.nearestTo", "contents" : "world.nearestTo(${1})" },
		{ "trigger": "world.npcType", "contents" : "world.npcType(${1})" },
		{ "trigger": "world.players", "contents" : "world.players(${1})" },
		{ "trigger": "world.pointCollision", "contents" : "world.pointCollision(${1})" },
		{ "trigger": "world.regionActive", "contents" : "world.regionActive(${1})" },
		{ "trigger": "world.setPlayerStart", "contents" : "world.setPlayerStart(${1})" },

		{ "trigger": "attemptedFire", "contents" : "attemptedFire(${1})" },
		{ "trigger": "continueFire", "contents" : "continueFire(${1})" },
		{ "trigger": "damage", "contents" : "damage(${1})" },
		{ "trigger": "die", "contents" : "die(${1})" },
		{ "trigger": "endFire", "contents" : "endFire(${1})" },
		{ "trigger": "fireTriggered", "contents" : "fireTriggered(${1})" },
		{ "trigger": "init", "contents" : "init(${1})" },
		{ "trigger": "input", "contents" : "input(${1})" },
		{ "trigger": "interact", "contents" : "interact(${1})" },
		{ "trigger": "onInboundNodeChange", "contents" : "onInboundNodeChange(${1})" },
		{ "trigger": "onInteraction", "contents" : "onInteraction(${1})" },
		{ "trigger": "onNodeConnectionChange", "contents" : "onNodeConnectionChange(${1})" },
		{ "trigger": "shouldDie", "contents" : "shouldDie(${1})" },
		{ "trigger": "startTriggered", "contents" : "startTriggered(${1})" },
		{ "trigger": "triggerCooldown", "contents" : "triggerCooldown(${1})" },
		{ "trigger": "triggerWindup", "contents" : "triggerWindup(${1})" },
		{ "trigger": "uninit", "contents" : "uninit(${1})" },
		{ "trigger": "update", "contents" : "update(${1})" },
		{}
	]
}
